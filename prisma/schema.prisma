generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String?    @unique
  mobile    String     @unique
  otp       Int?
  age       Int?
  dob       String?
  player    Player?
  userToken UserToken?
}

model UserToken {
  id     Int     @id @default(autoincrement())
  token  String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model Player {
  id           Int      @id @default(autoincrement())
  bowlingStyle String?
  battingStyle String?
  wicketKeeper Boolean?
  allrounder   Boolean?
  userId       Int      @unique
  user         User     @relation(fields: [userId], references: [id])
  statsId      Int      @unique
  stats        Stats    @relation(fields: [statsId], references: [id])
  matches      Match[]
  teams        Team[]   @relation("TeamPlayers")
}

model Stats {
  id           Int           @id @default(autoincrement())
  matches      Int           @default(0)
  player       Player?
  bowlStatsId  Int           @unique
  bowlingStats BowlingStats  @relation(fields: [bowlStatsId], references: [id])
  fieldStatsId Int           @unique
  fieldStats   FieldingStats @relation(fields: [fieldStatsId], references: [id])
  batStatsId   Int           @unique
  batStats     BattingStats  @relation(fields: [batStatsId], references: [id])
}

model BowlingStats {
  id      Int    @id @default(autoincrement())
  stats   Stats?
  matches Int    @default(0)
  innings Int    @default(0)
  wickets Int    @default(0)
  noBalls Int    @default(0)
  wides   Int    @default(0)
}

model BattingStats {
  id          Int     @id @default(autoincrement())
  stats       Stats?
  matches     Int     @default(0)
  innings     Int     @default(0)
  ballsPlayed BigInt  @default(0)
  runs        BigInt  @default(0)
  notOuts     BigInt  @default(0)
  average     Decimal @default(0)
  strikeRate  Decimal @default(0)
  sixes       BigInt  @default(0)
  fours       BigInt  @default(0)
  ones        BigInt  @default(0)
  twos        BigInt  @default(0)
  threes      BigInt  @default(0)
}

model FieldingStats {
  id          Int    @id @default(autoincrement())
  stats       Stats?
  catches     Int    @default(0)
  mostCatches Int    @default(0)
  runOuts     Int    @default(0)
  mostRunOuts Int    @default(0)
  stump       Int    @default(0)
}

model Team {
  id           Int          @id @default(autoincrement())
  name         String?      @unique
  imageUrl     String?
  matches      Match[]
  totalMatches Int          @default(0)
  wins         Int          @default(0)
  losses       Int          @default(0)
  draws        Int          @default(0)
  players      Player[]     @relation("TeamPlayers")
  tournaments  Tournament[]
}

model Match {
  id           Int      @id @default(autoincrement())
  state        String
  ground       String
  date         DateTime
  ballType     String
  bowlingLimit Int
  overs        Int
  players      Player[]
  teams        Team[]
}

model Tournament {
  id    Int    @id @default(autoincrement())
  teams Team[]
}
